#use this for user skills and projects skills matching. save skills as a string of words and put it in the search query
GET /projectfinder/_search
{
  "query": {
    "multi_match": {
      "query": "python unix sql softwareentwick",
      "fields": ["description", "title", "skills.keyword^2", "category"]
    }
  }
}
###########################################
DELETE /mongodb_meta
GET _cat/indices?v

GET /projectfinder/_search
{
  "query": {
    "multi_match": {
      "query": "python unix softwareentwic",
      "fields": ["description", "title", "skills", "category"]
    }
  }
}


PUT /projectfinder
{
    "settings": {
        "number_of_shards": 1, 
        "analysis": {
            "filter": {
                "autocomplete_filter": { 
                    "type":     "edge_ngram",
                    "min_gram": 2,
                    "max_gram": 20
                }
            },
            "analyzer": {
                "autocomplete": {
                    "type":      "custom",
                    "tokenizer": "standard",
                    "filter": [
                        "lowercase",
                        "autocomplete_filter" 
                    ]
                }
            }
        }
    }
}

GET /projectfinder_opt/_analyze
{
  "analyzer": "autocomplete",
  "text": "python"
}


PUT /projectfinder/_mapping/itproject
{
  "itproject": {
    "properties": {
      "title": {
        "type": "text",
        "analyzer": "autocomplete"
      },
      "description": {
        "type": "text"
      }
    }
  }
}

GET _search
{
  "query": {
    "match_all": {}
  }
}



GET _cat/indices?v
PUT itproject_clean
PUT projectfinder
DELETE itproject_clean
DELETE projectfinder
DELETE mongodb_meta

GET projectfinder/itproject_clean/_mapping

GET /projectfinder/itproject_clean/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "multi_match": {
            "query": "python developer",
            "operator": "and",
            "fields": [
              "title^5",
              "description"
            ],
            "fuzziness": "AUTO",
            "prefix_length": 2
          }
        },
        {
          "match": {
            "bereich.group": "Data Science"
          }
        }
      ],
      "filter": {
        "term": {
          "region.bundesland.keyword": "Bayern"
        }
      }
    }
  }
}
GET /projectfinder/itproject_clean/_search
{
    "query": {
        "bool": {
            "must": {
                "multi_match": {
                    "query": "Python Developer",
                    "operator": "and",
                    "fields": [
                        "title.keyword",
                        "description"
                    ],
                    "fuzziness": "AUTO",
                    "prefix_length": 2
                }
            }
        }
    }
}
GET /projectfinder/itproject_clean/_search
{
  "query": {
    "multi_match": {
      "query": "python developer",
      "operator": "and",
      "fields": [
        "title.keyword",
        "description"
      ],
      "fuzziness": "AUTO",
      "prefix_length": 2
    }
  },
  "sort": [
    "_score"
  ]
}
GET /projectfinder/itproject_clean/_search
{
  "query": {
   "bool": {
     "must": [
      {
        "match": {
          "title": {
          "query": "python developer",
          "operator": "and",
          "fuzziness": "AUTO",
          "prefix_length": 2
          }
        }
      }
    ]
        
  }
 }
}
GET /projectfinder/itproject_clean/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "skill_summary.keyword": "windows"
          }
        },
        {
          "match": {
            "bereich.group": "Infrastructure"
          }
        },
        {
          "match": {
            "bereich.group_type": "Admin"
          }
        }
      ],
      "filter": {
        "term": {
          "region.bundesland.keyword": "Berlin"
        }
      }
    }
  }
}

GET /projectfinder/itproject_clean/_search
{
    "query": {
        "bool": {
            "must": [
                {"match": {"bereich.group_type": "Business Intelligence"}}
            ]
        }
    }
}
GET /projectfinder/itproject_clean/_search
{
  "query": {
        "bool": {
            "must": [
                {"match": {"bereich.group": "Development"}},
                {"match": {"bereich.group_type": "Mobile"}}
            ]
        }
    },
  "aggs": {
    "Category Filter": {
      "terms": {
        
        "field": "bereich.group_type.keyword",
        "size": 10
      }
    },
    "Region Filter": {
      "terms": {
        "field": "region.bundesland.keyword",
        "size": 10
      }
    },
    "Skill Filter": {
      "terms": {
        "field": "bereich.skill.keyword",
        "size": 10
      }
    }
  }
}

GET /projectfinder/itproject_clean/_search
{
    "query": {
        "bool": {
            "must": [
                {"match": {"bereich.group": "Data Science"}}
            ]
        }
    },
    "aggs": {
    "Group": {
      "terms": {
        "field": "bereich.group.keyword",
        "size": 10
      }
    },
    "Group Type": {
      "terms": {
        "field": "bereich.group_type.keyword",
        "size": 10
      }
    },
    "Group Stack": {
      "terms": {
        "field": "bereich.group_type_stack.keyword",
        "size": 10
      }
    },
    "Skill Filter": {
      "terms": {
        "field": "skill_summary.keyword",
        "size": 10
      }
    },
    "Region Filter": {
      "terms": {
        "field": "region.bundesland.keyword",
        "size": 10
      }
    }
  }
}

GET /projectfinder/itproject_clean/_search
{
  "size": 0,
  "aggs" : {
    "messages" : {
      "filters" : {
        "filters" : {
          "Group" :   { "match" : { "bereich.group" : "Development"   }},
          "Mobile" : { "match" : { "bereich.group_type" : "Mobile" }}
        }
      }
    }
  }
}

GET projectfinder/itproject_clean/_search
{
  "size": 1,
  "query": {
    "multi_match": {
      "query": "big data",
      "operator": "and",
      "fields": [
        "title^4",
        "description"
      ],
      "fuzziness": "AUTO",
      "prefix_length": 2
    }
  },
  "aggs": {
    "Group": {
      "terms": {
        "field": "bereich.group.keyword",
        "size": 10
      }
    },
    "Group Type": {
      "terms": {
        "field": "bereich.group_type.keyword",
        "size": 10
      }
    },
    "Group Stack": {
      "terms": {
        "field": "bereich.group_type_stack.keyword",
        "size": 10
      }
    },
    "Skill Filter": {
      "terms": {
        "field": "skill_summary.keyword",
        "size": 10
      }
    },
    "Region Filter": {
      "terms": {
        "field": "region.bundesland.keyword",
        "size": 10
      }
    }
  }
}


GET projectfinder/itproject_clean/_search
{
  "size": 1,
  "sort": [
                {
                    "filter_date_post": {
                    "order": "desc"
                    }
                },
                "_score"
            ],
  "aggs": {
    "Group": {
      "terms": {
        "field": "bereich.group.keyword",
        "size": 10
      }
    },
    "Group Type": {
      "terms": {
        "field": "bereich.group_type.keyword",
        "size": 20
      }
    },
    "Group Stack": {
      "terms": {
        "field": "bereich.group_type_stack.keyword",
        "size": 10
      }
    },
    "Skill Filter": {
      "terms": {
        "field": "skill_summary.keyword",
        "size": 10
      }
    },
    "Region Filter": {
      "terms": {
        "field": "region.bundesland.keyword",
        "size": 16
      }
    }
  }
}


PUT /projectfinder
{
  "settings": {
    "number_of_shards": 1,
    "analysis": {
      "filter": {
        "autocomplete_filter": {
          "type": "edge_ngram",
          "min_gram": 2,
          "max_gram": 20
        }
      },
      "analyzer": {
        "autocomplete": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "autocomplete_filter"
          ]
        }
      }
    }
  }
}

PUT /projectfinder/_mapping/itproject
{
  "itproject": {
    "properties": {
      "title": {
        "type": "text",
        "analyzer": "autocomplete"
      },
      "description": {
        "type": "text"
      }
    }
  }
}



PUT projectfinder
{
  "settings": {
    "number_of_shards": 5,
    "analysis": {
      "filter": {
        "autocomplete_filter": {
          "type": "edge_ngram",
          "min_gram": 2,
          "max_gram": 20
        }
      },
      "analyzer": {
        "autocomplete": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "autocomplete_filter"
          ]
        }
      }
    }
  }
}



PUT projectfinder/_mapping/itproject_clean
{
  "itproject_clean": { 
               "properties": { 
                   "title": { 
                       "type": "text",
                       "analyzer": "autocomplete"
                   },
                   "description": {
                       "type":  "text"
                   },
                   "bereich": {
                       "type":  "keyword"
                   },
                   "region": {
                       "type":  "keyword"
                   }
               }
           }
}

PUT projectfinder/_mapping/itproject
{
  "itproject": {
    "properties": {
      "title": {
        "type": "text",
        "analyzer": "autocomplete"
      },
      "description": {
        "type": "text"
      },
      "bereich": {
        "type": "keyword"
      },
      "region": {
        "type": "keyword"
      }
    }
  }
}


GET /projectfinder/itproject_clean/_search
{
  "sort": [
    {
      "filter_date_post": {
        "order": "desc"
      }
    },
    "_score"
  ]
}


GET projectfinder/_search
GET projectfinder/itproject_clean/_search
{
  "query": {
    "multi_match": {
      "query": "Hessen",
      "fields": ["region.stadt"],
      "fuzziness" : "AUTO",
      "prefix_length" : 2
    }
  }
}
DELETE projects


GET projects/_search

PUT projects
{
  "settings": {
    "number_of_shards": 5,
    "analysis": {
      "filter": {
        "autocomplete_filter": {
          "type": "edge_ngram",
          "min_gram": 2,
          "max_gram": 20
        }
      },
      "analyzer": {
        "autocomplete": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "autocomplete_filter"
          ]
        }
      }
    }
  }
}

PUT projects/_mapping/projects_list
{
  "projects_list": {
    "properties": {
      "title": {
        "type": "text",
        "analyzer": "autocomplete"
      },
      "description": {
        "type": "text"
      },
      "bereich": {
        "type": "keyword"
      },
      "region": {
        "type": "keyword"
      }
    }
  }
}






